import splunklib.client as client
import splunklib.results as results
import pandas as pd
import json

# Splunk connection details
SPLUNK_HOST = "your_splunk_host"  # e.g., "splunk.mycompany.com"
SPLUNK_PORT = 8089  # Default management port for Splunk
USERNAME = "your_username"
PASSWORD = "your_password"

# Splunk search query
SPLUNK_QUERY = """
search index=wf_pvsi_other wf_id=EB5CL wf_env=PROD sourcetype="wf:ebscl:main.txt" RefMsgNm="submitClaim"
| rex field=_raw max_match=1 "\\r\"ECN\":\"(?<ECN>.*?)\""
| rex field=_raw max_match=1 "customerClaimNbr\":\"(?<claimNumber>[0-9]+)\""
| rex field=_raw max_match=1 "claimType\":\"(?<claimType>.*?)\""
| rex field=_raw max_match=1 "SORName\":\"(?<SORName>.*?)\""
| rex field=_raw max_match=1 "crDecision\":\"(?<crDecision>.*?)\""
| rex field=_raw max_match=1 "referenceNumber\":\"(?<refNbr>.*?)\""
| rex field=_raw max_match=1 "crAmount\":\"(?<crAmount>.*?)\""
| rex field=_raw max_match=1 "messageData\":\"(?<MsData>.*?)\""
| search crDecision="Provisional Credit" AND SORName="LU"
| rename DT as claimDateTime
| table ECN claimType SORName crDecision refNbr crAmount claimDateTime MsData
"""

# Connect to Splunk
try:
    service = client.connect(
        host=SPLUNK_HOST,
        port=SPLUNK_PORT,
        username=USERNAME,
        password=PASSWORD,
    )
    print("Connected to Splunk successfully.")
except Exception as e:
    print(f"Failed to connect to Splunk: {e}")
    exit()

# Run the search query
try:
    job = service.jobs.create(SPLUNK_QUERY, exec_mode="blocking")
    print("Query executed successfully.")
except Exception as e:
    print(f"Failed to execute the query: {e}")
    exit()

# Use JSONResultsReader instead of ResultsReader
try:
    results_reader = results.JSONResultsReader(job.results(output_mode="json"))
    
    # Parse JSON results
    json_data = [result for result in results_reader if isinstance(result, dict)]

    # Save raw JSON data
    json_output_file = "splunk_results.json"
    with open(json_output_file, "w") as json_file:
        json.dump(json_data, json_file, indent=4)
    print(f"JSON results saved to {json_output_file}")

    # Optional: Convert JSON to DataFrame and save as CSV
    df = pd.DataFrame(json_data)
    output_file = "splunk_results.csv"
    df.to_csv(output_file, index=False)
    print(f"Results saved to {output_file}")

except Exception as e:
    print(f"Error processing results: {e}")
