import os
import time
import shutil
import pandas as pd
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options

# ---------- CONFIGURATION ----------


# ---------- SETUP CHROME ----------
options = Options()
prefs = {
    "download.default_directory": DOWNLOAD_DIR,
    "download.prompt_for_download": False,
    "plugins.always_open_pdf_externally": True
}
options.add_experimental_option("prefs", prefs)
service = Service(CHROME_DRIVER_PATH)
driver = webdriver.Chrome(service=service, options=options)
driver.maximize_window()
driver.get(PORTAL_URL)

print("Waiting for SSO login...")
time.sleep(20)

# ---------- LOAD CASE IDs ----------
df = pd.read_excel(EXCEL_FILE, dtype={CASE_ID_COLUMN: str})
case_list = df[CASE_ID_COLUMN].astype(str).tolist()

# ---------- PROCESS CASES ----------
for case_id in case_list:
    print(f"\nProcessing case: {case_id}")
    try:
        WebDriverWait(driver, WAIT_TIMEOUT).until(
            EC.element_to_be_clickable((By.XPATH, "//span[text()='Case Search']"))
        ).click()
        time.sleep(2)

        case_input = WebDriverWait(driver, WAIT_TIMEOUT).until(
            EC.presence_of_element_located((By.ID, "774c51e8"))
        )
        case_input.clear()
        case_input.send_keys(case_id)
        time.sleep(1)

        search_button = driver.find_element(By.XPATH, "//button[text()='Search']")
        search_button.click()
        time.sleep(5)

        expand_arrow = WebDriverWait(driver, WAIT_TIMEOUT).until(
            EC.element_to_be_clickable((By.XPATH, "//span[@data-ctl='[\"ExpCollIcon\"]']"))
        )
        expand_arrow.click()
        time.sleep(2)

        view_case_button = WebDriverWait(driver, WAIT_TIMEOUT).until(
            EC.element_to_be_clickable((By.XPATH, "//button[contains(text(),'View Case')]"))
        )
        view_case_button.click()
        time.sleep(5)

        driver.execute_script("arguments[0].scrollIntoView();", WebDriverWait(driver, WAIT_TIMEOUT).until(
            EC.presence_of_element_located((By.XPATH, "//h4[text()='Attachments']"))
        ))
        time.sleep(2)

        attachment_links = driver.find_elements(By.CSS_SELECTOR, "a[href$='.pdf'], a[href$='.xlsx'], a[href$='.docx'], a[href$='.xls'], a[href$='.doc']")
        if not attachment_links:
            print("No attachments found.")
            continue

        case_folder = os.path.join(DOWNLOAD_DIR, case_id)
        os.makedirs(case_folder, exist_ok=True)

        for link in attachment_links:
            file_name = link.text.strip()
            print(f"Downloading: {file_name}")
            before = set(os.listdir(DOWNLOAD_DIR))
            link.click()

            downloaded = False
            for _ in range(WAIT_TIMEOUT):
                after = set(os.listdir(DOWNLOAD_DIR))
                new_files = after - before
                if new_files:
                    latest_file = list(new_files)[0]
                    src = os.path.join(DOWNLOAD_DIR, latest_file)
                    dst = os.path.join(case_folder, latest_file)
                    shutil.move(src, dst)
                    print(f"Saved to {dst}")
                    downloaded = True
                    break
                time.sleep(1)

            if not downloaded:
                print(f"Timeout waiting for download: {file_name}")

        driver.back(); time.sleep(2)
        driver.back(); time.sleep(2)

    except Exception as e:
        print(f"Error processing case {case_id}: {e}")

driver.quit()
print("\nDone with all cases.")
