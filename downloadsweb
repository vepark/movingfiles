
import os
import time
import shutil
import pandas as pd
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC



# -------- SETUP CHROME DRIVER --------
options = Options()
prefs = {
    "download.default_directory": DOWNLOAD_DIR,
    "download.prompt_for_download": False,
    "plugins.always_open_pdf_externally": True
}
options.add_experimental_option("prefs", prefs)
service = Service(CHROME_DRIVER_PATH)
driver = webdriver.Chrome(service=service, options=options)
wait = WebDriverWait(driver, WAIT_TIMEOUT)
driver.maximize_window()
driver.get(PORTAL_URL)

print("Waiting for manual SSO login...")
time.sleep(25)

# -------- READ CASE LIST --------
df = pd.read_excel(EXCEL_FILE, dtype={CASE_ID_COLUMN: str})
case_list = df[CASE_ID_COLUMN].astype(str).tolist()

# -------- AUTOMATION LOOP --------
for case_id in case_list:
    print(f"\nProcessing case: {case_id}")
    try:
        wait.until(EC.element_to_be_clickable((By.XPATH, "//span[text()='Case Search']"))).click()
        time.sleep(3)

        # Type slowly into input
        case_input = wait.until(EC.visibility_of_element_located((By.XPATH, "//input[contains(@name, 'pPegaCaseID')]")))
        case_input.clear()
        for char in case_id:
            case_input.send_keys(char)
            time.sleep(0.05)
        case_input.send_keys(Keys.ENTER)
        time.sleep(5)

        # Click > arrow to expand row
        expand_arrow = wait.until(EC.element_to_be_clickable((By.XPATH, "//span[@data-ctl='[\"ExpCollIcon\"]']")))
        expand_arrow.click()
        time.sleep(2)

        # Click "View Case"
        view_case = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(),'View Case')]")))
        view_case.click()
        time.sleep(8)

        # Scroll to attachments
        attach_section = wait.until(EC.presence_of_element_located((By.XPATH, "//h4[text()='Attachments']")))
        driver.execute_script("arguments[0].scrollIntoView(true);", attach_section)
        time.sleep(2)

        # Download attachments
        attachment_links = driver.find_elements(By.CSS_SELECTOR, "a[href$='.pdf'], a[href$='.xlsx'], a[href$='.xls'], a[href$='.docx'], a[href$='.doc']")
        if not attachment_links:
            print("No attachments found.")
            continue

        case_folder = os.path.join(DOWNLOAD_DIR, case_id)
        os.makedirs(case_folder, exist_ok=True)

        for link in attachment_links:
            file_name = link.text.strip() or 'downloaded_file'
            print(f"Downloading: {file_name}")
            before_files = set(os.listdir(DOWNLOAD_DIR))
            link.click()

            downloaded = False
            for _ in range(WAIT_TIMEOUT):
                after_files = set(os.listdir(DOWNLOAD_DIR))
                new_files = after_files - before_files
                if new_files:
                    downloaded_file = list(new_files)[0]
                    shutil.move(
                        os.path.join(DOWNLOAD_DIR, downloaded_file),
                        os.path.join(case_folder, downloaded_file)
                    )
                    print(f"Saved to: {case_folder}")
                    downloaded = True
                    break
                time.sleep(1)

            if not downloaded:
                print(f"Timeout waiting for download: {file_name}")

        driver.back(); time.sleep(2)
        driver.back(); time.sleep(2)

    except Exception as e:
        print(f"Error processing case {case_id}: {e}")

driver.quit()
print("All done.")
