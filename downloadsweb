
import os
import time
import shutil
import pandas as pd
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service


# ---------- SETUP DOWNLOAD OPTIONS ----------
options = Options()
prefs = {
    "download.default_directory": DOWNLOAD_DIR,
    "download.prompt_for_download": False,
    "plugins.always_open_pdf_externally": True
}
options.add_experimental_option("prefs", prefs)

service = Service(CHROME_DRIVER_PATH)
driver = webdriver.Chrome(service=service, options=options)
driver.maximize_window()
driver.get(PORTAL_URL)

# ---------- WAIT FOR SSO LOGIN ----------
print("Please log in via SSO if needed...")
time.sleep(15)

# ---------- READ CASE LIST ----------
df = pd.read_excel(EXCEL_FILE, dtype={CASE_ID_COLUMN: str})
case_list = df[CASE_ID_COLUMN].astype(str).tolist()

for case_id in case_list:
    print(f"\nProcessing Case ID: {case_id}")

    try:
        # STEP 1: SEARCH CASE
        case_input = driver.find_element(By.ID, "774c51e8")  # From input tag
        search_button = driver.find_element(By.XPATH, "//button[contains(text(),'Search')]")

        case_input.clear()
        case_input.send_keys(case_id)
        search_button.click()
        time.sleep(3)

        # STEP 2: EXPAND CASE
        expand_button = driver.find_element(By.XPATH, "//span[@data-ctl='expandCollapse']")
        expand_button.click()
        time.sleep(2)

        # STEP 3: VIEW CASE
        view_case_button = driver.find_element(By.XPATH, "//button[contains(text(),'View Case')]")
        view_case_button.click()
        time.sleep(5)

        # STEP 4: DOWNLOAD ATTACHMENTS
        attachment_links = driver.find_elements(By.CSS_SELECTOR,
            "a[href$='.pdf'], a[href$='.docx'], a[href$='.doc'], a[href$='.xlsx'], a[href$='.xls']")

        if not attachment_links:
            print("No attachments found.")
        else:
            print(f"Found {len(attachment_links)} attachment(s).")
            case_folder = os.path.join(DOWNLOAD_DIR, case_id)
            os.makedirs(case_folder, exist_ok=True)

            for link in attachment_links:
                file_name = link.text.strip()
                print(f"Downloading: {file_name}")
                before_files = set(os.listdir(DOWNLOAD_DIR))
                link.click()

                downloaded = False
                for _ in range(WAIT_TIMEOUT):
                    after_files = set(os.listdir(DOWNLOAD_DIR))
                    new_files = after_files - before_files
                    if new_files:
                        downloaded_file = list(new_files)[0]
                        downloaded = True
                        break
                    time.sleep(1)

                if downloaded:
                    src = os.path.join(DOWNLOAD_DIR, downloaded_file)
                    dst = os.path.join(case_folder, downloaded_file)
                    shutil.move(src, dst)
                    print(f"Saved to {dst}")
                else:
                    print(f"Timeout waiting for download: {file_name}")

        # Return to Search Page
        driver.back()
        time.sleep(2)
        driver.back()
        time.sleep(2)

    except Exception as e:
        print(f"Error processing {case_id}: {e}")

driver.quit()
print("\nDone with all cases.")
