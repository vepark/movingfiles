from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
import os
import time
import pandas as pd
from selenium.webdriver.chrome.service import Service

# Set up Selenium WebDriver for Chrome
chrome_driver_path = "C:\\ProgramData\\Google\\ChromeDriver\\chromedriver.exe"  # Update with your path
service = Service(executable_path=chrome_driver_path)
driver = webdriver.Chrome(service=service)

try:
    # Open the Tableau dashboard
    tableau_url = "https://tableau.com/views/YourWorkbookName"  # Replace with your actual Tableau URL
    driver.get(tableau_url)

    # Wait for the Tableau iframe to load
    WebDriverWait(driver, 30).until(
        EC.presence_of_element_located((By.TAG_NAME, "iframe"))
    )

    # Switch to the Tableau iframe
    iframe = driver.find_element(By.TAG_NAME, "iframe")
    driver.switch_to.frame(iframe)

    # Locate the down arrow button (hover-triggered element)
    download_arrow = WebDriverWait(driver, 30).until(
        EC.presence_of_element_located((By.XPATH, "//button[@title='Choose a format to download']"))
    )

    # Use ActionChains to hover over the download arrow
    actions = ActionChains(driver)
    actions.move_to_element(download_arrow).perform()
    time.sleep(2)  # Allow time for the menu to appear

    # Now click "Choose a format to download"
    download_arrow.click()

    # Select "Crosstab" from the dropdown
    crosstab_option = WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, "//span[text()='Crosstab']"))
    )
    crosstab_option.click()

    # Select the worksheet to download
    worksheet_option = WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), 'Review Findings')]"))
    )
    worksheet_option.click()

    # Choose "Excel" format
    excel_option = WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, "//input[@value='excel']"))
    )
    excel_option.click()

    # Click the "Download" button
    download_button_final = WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Download')]"))
    )
    download_button_final.click()

    # Wait for the file to download
    time.sleep(15)  # Adjust based on your network speed

    # Rename the downloaded file
    download_folder = os.path.expanduser("~\\Downloads")
    for file in os.listdir(download_folder):
        if file.endswith(".crdownload"):
            downloaded_file = os.path.join(download_folder, file)
            final_file = os.path.join(download_folder, "exported_data.xlsx")
            os.rename(downloaded_file, final_file)
            print(f"File renamed successfully to: {final_file}")

    # Load the Excel file into a Pandas DataFrame
    df = pd.read_excel(final_file)
    print("Data successfully loaded into DataFrame!")

    # Perform basic data analysis
    print("First few rows of the DataFrame:")
    print(df.head())

    # Example analysis (customize as needed)
    print("\nSummary statistics:")
    print(df.describe())

    # Optional: Visualize data
    import matplotlib.pyplot as plt
    df.hist(figsize=(10, 8))
    plt.show()

finally:
    # Close the browser
    driver.quit()
