from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import os
import time

# Initialize Chrome WebDriver
service = webdriver.chrome.service.Service()  # Auto-detect path to ChromeDriver
driver = webdriver.Chrome(service=service)

# Define Tableau URL
tableau_url = "https://tableau.wellsfargo.com/vizql/v/DACQMonthlyReconciliationReport/v1/DACQReviewFindings"  # Replace with actual URL

# Folder to save downloaded file
download_folder = os.path.expanduser("~/Downloads")

try:
    # Open Tableau dashboard
    driver.get(tableau_url)
    print("Opened Tableau dashboard.")

    # Wait for iframe and switch to it
    WebDriverWait(driver, 60).until(EC.presence_of_element_located((By.TAG_NAME, "iframe")))
    iframe = driver.find_element(By.TAG_NAME, "iframe")
    driver.switch_to.frame(iframe)
    print("Switched to iframe.")

    # Wait for 'Download' button and click it
    WebDriverWait(driver, 30).until(EC.element_to_be_clickable((By.XPATH, "//*[@id='download']"))).click()
    print("Clicked the 'Download' button.")

    # Wait for 'Crosstab' option and click it
    WebDriverWait(driver, 30).until(
        EC.element_to_be_clickable((By.XPATH, "//*[@id='viz-viewer-toolbar-download-menu']/div[3]/div/div/span[2]"))
    ).click()
    print("Selected 'Crosstab'.")

    # Wait for worksheet selection and click the correct worksheet
    WebDriverWait(driver, 30).until(
        EC.element_to_be_clickable(
            (By.XPATH, "//*[@id='export-crosstab-options-dialog-Dialog-BodyWrapper-Dialog-Body-Id']/div/div[1]/div[2]/div[1]/div/div[1]/div/span")
        )
    ).click()
    print("Selected worksheet 'DAQC Reviews Findings'.")

    # Wait for Excel format option and click it
    WebDriverWait(driver, 30).until(
        EC.element_to_be_clickable(
            (By.XPATH, "//*[@id='export-crosstab-options-dialog-Dialog-BodyWrapper-Dialog-Body-Id']/div/div[2]/div[2]/label[1]/div")
        )
    ).click()
    print("Selected 'Excel' format.")

    # Wait for the final 'Download' button and click it
    download_button_final = WebDriverWait(driver, 30).until(
        EC.element_to_be_clickable(
            (By.XPATH, "//*[@id='export-crosstab-options-dialog-Dialog-BodyWrapper-Dialog-Body-Id']/div/div[3]/button")
        )
    )
    driver.execute_script("arguments[0].click();", download_button_final)  # Ensure click is registered
    print("Clicked the final 'Download' button.")

    # Wait for the file to download
    time.sleep(30)  # Adjust time based on file size
    print("Waiting for the download to complete...")

    # Rename the downloaded file
    for file in os.listdir(download_folder):
        if file.endswith(".crdownload"):
            final_file = os.path.join(download_folder, file)
            os.rename(final_file, os.path.join(download_folder, "exported_data.xlsx"))
            print(f"File renamed to 'exported_data.xlsx'")
except Exception as e:
    print(f"Error occurred: {e}")
finally:
    # Close the browser
    driver.quit()
