Sub ExtractDatabasesAndCount()
    Dim ws As Worksheet
    Dim dataRange As Range
    Dim cell As Range
    Dim regex As Object
    Dim matches As Object
    Dim databaseCounts As Object
    Dim match As Object
    Dim database As String
    Dim outputRow As Long

    ' Set the worksheet and data range
    Set ws = ThisWorkbook.Sheets(1) ' Adjust to your sheet name if necessary
    Set dataRange = ws.Range("A1:A" & ws.Cells(ws.Rows.Count, "A").End(xlUp).Row)

    ' Create a regex object
    Set regex = CreateObject("VBScript.RegExp")
    regex.Pattern = "\b[A-Z0-9_]+(?:\.[A-Z0-9_]+)?\b"
    regex.Global = True

    ' Dictionary to store database counts
    Set databaseCounts = CreateObject("Scripting.Dictionary")

    ' Loop through each cell in the data range
    For Each cell In dataRange
        If Not IsEmpty(cell.Value) Then
            Set matches = regex.Execute(cell.Value)
            For Each match In matches
                database = match.Value
                If databaseCounts.Exists(database) Then
                    databaseCounts(database) = databaseCounts(database) + 1
                Else
                    databaseCounts.Add database, 1
                End If
            Next match
        End If
    Next cell

    ' Output results to a new worksheet
    Dim outputWs As Worksheet
    On Error Resume Next
    Set outputWs = ThisWorkbook.Sheets("DatabaseCounts")
    If outputWs Is Nothing Then
        Set outputWs = ThisWorkbook.Sheets.Add
        outputWs.Name = "DatabaseCounts"
    End If
    On Error GoTo 0

    ' Write header row
    outputWs.Cells(1, 1).Value = "Database"
    outputWs.Cells(1, 2).Value = "Count"

    ' Write database counts
    outputRow = 2
    For Each database In databaseCounts.Keys
        outputWs.Cells(outputRow, 1).Value = database
        outputWs.Cells(outputRow, 2).Value = databaseCounts(database)
        outputRow = outputRow + 1
    Next database

    ' Sort by count in descending order
    Dim sortRange As Range
    Set sortRange = outputWs.Range("A1:B" & outputRow - 1)
    sortRange.Sort Key1:=outputWs.Range("B1"), Order1:=xlDescending, Header:=xlYes

    MsgBox "Extraction and sorting complete!", vbInformation
End Sub
