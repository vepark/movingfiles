# Define global parameters
$BasePath = "Y:\"
$DestinationPath = "C:\Users\87878\Downloads"
$IDList = @(
    "123423_2346", "123423_2345"
    # Add more entries as needed
)

# Function to log messages
function Log-Message {
    param (
        [string]$Message
    )
    Write-Host "$(Get-Date -Format "yyyy-MM-dd HH:mm:ss") - $Message"
}

# Function to copy subfolders to destination
function Copy-Subfolder {
    param (
        [string]$SourcePath,
        [string]$DestPath
    )
    # Copy the subfolder without duplicating its name
    Copy-Item -Path $SourcePath\* -Destination $DestPath -Recurse -Force
}

# Define global result array
$global:results = @()

# Loop through each ID in the IDList
foreach ($ID in $IDList) {
    $IDParts = $ID -split "_"
    $MainFolderID = $IDParts[0]
    $SubFolderID = $IDParts[1]

    $MainFolderPath = Join-Path $BasePath $MainFolderID

    if (Test-Path $MainFolderPath) {
        $SubFolder = Get-ChildItem -Path $MainFolderPath -Recurse -Directory | Where-Object { $_.Name -match $SubFolderID }
        if ($SubFolder) {
            foreach ($folder in $SubFolder) {
                $DestSubPath = Join-Path $DestinationPath $folder.Name
                if (-not (Test-Path $DestSubPath)) {
                    New-Item -ItemType Directory -Path $DestSubPath | Out-Null
                }
                Copy-Subfolder -SourcePath $folder.FullName -DestPath $DestSubPath
                Log-Message "Copied $($folder.Name) from $($MainFolderPath) to $($DestSubPath)"
            }
        } else {
            Log-Message "Subfolder containing ID '$SubFolderID' not found in main folder '$MainFolderID'"
        }
    } else {
        Log-Message "Main folder '$MainFolderID' does not exist."
    }
}

Log-Message "Script completed."










# Function to log messages
function Write-Log {
    param ([string]$message)
    $logFile = "C:\path\to\logfile.log"  # Update with the path to your log file
    Add-Content -Path $logFile -Value "$((Get-Date).ToString('yyyy-MM-dd HH:mm:ss')) - $message"
}

# Ensure the destination directory exists
if (-not (Test-Path -Path $DestinationDir)) {
    try {
        New-Item -ItemType Directory -Path $DestinationDir -Force | Out-Null
        Write-Log "Created destination directory: $DestinationDir"
    } catch {
        Write-Log "Error creating destination directory: $_"
        throw
    }
}

# Move entire folder to DMS
try {
    Write-Log "Moving files from $SourceDir to $DestinationDir"
    Move-Item -Path $SourceDir -Destination $DestinationDir -Recurse -Force
    Write-Log "Moved files from $SourceDir to $DestinationDir successfully"
} catch {
    Write-Log "Error moving files from $SourceDir to $DestinationDir: $($_)"
}
