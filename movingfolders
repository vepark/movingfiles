function Copy-Subfolder {
    param (
        [string]$sourcePath,
        [string]$destPath
    )

    Copy-Item -Path $sourcePath -Destination $destPath -Recurse -Force
}

# Define global result array
$global:results = @()

# Loop through each ID in the IDList
foreach ($ID in $IDList) {
    $splitID = $ID -split "_"
    $mainFolder = $splitID[0]
    $subFolder = $splitID[1]

    $mainFolderPath = Join-Path $BasePath $mainFolder
    if (Test-Path $mainFolderPath) {
        $subFolderPath = Join-Path $mainFolderPath "*$subFolder*"
        $subFolderName = Get-ChildItem -Path $mainFolderPath -Recurse -Directory | Where-Object { $_.FullName -like $subFolderPath }

        if ($subFolderName) {
            $sourcePath = $subFolderName.FullName
            $destMainFolderPath = Join-Path $DestinationPath $mainFolder
            $destPath = Join-Path $destMainFolderPath $subFolderName.Name

            if (-not (Test-Path $destMainFolderPath)) {
                New-Item -ItemType Directory -Path $destMainFolderPath | Out-Null
            }

            Copy-Subfolder -sourcePath $sourcePath -destPath $destPath

            $global:results += [PSCustomObject]@{
                MainFolder = $mainFolder
                SubFolder = $subFolderName.Name
                SourcePath = $sourcePath
                DestinationPath = $destPath
            }
        } else {
            Log-Message "Subfolder not found: $subFolder in $mainFolderPath"
        }
    } else {
        Log-Message "Main folder path does not exist: $mainFolderPath"
    }
}

# Output the results
$global:results | Format-Table -AutoSize











# Function to log messages
function Write-Log {
    param ([string]$message)
    $logFile = "C:\path\to\logfile.log"  # Update with the path to your log file
    Add-Content -Path $logFile -Value "$((Get-Date).ToString('yyyy-MM-dd HH:mm:ss')) - $message"
}

# Ensure the destination directory exists
if (-not (Test-Path -Path $DestinationDir)) {
    try {
        New-Item -ItemType Directory -Path $DestinationDir -Force | Out-Null
        Write-Log "Created destination directory: $DestinationDir"
    } catch {
        Write-Log "Error creating destination directory: $_"
        throw
    }
}

# Move entire folder to DMS
try {
    Write-Log "Moving files from $SourceDir to $DestinationDir"
    Move-Item -Path $SourceDir -Destination $DestinationDir -Recurse -Force
    Write-Log "Moved files from $SourceDir to $DestinationDir successfully"
} catch {
    Write-Log "Error moving files from $SourceDir to $DestinationDir: $($_)"
}
