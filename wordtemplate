import pandas as pd
from docx import Document
import os


# Label-to-column mapping for known left labels and placeholders
label_to_column = {
    "Case ID:": "CaseID",
    "Case Owner:": "CaseOwner",
    "Customer (Complainant) Name:": "CustomerName",
    "Customer Number (ECN):": "ECN",
    "Original Note Summary:": "OriginalNote",
    "Updated Note Summary:": "UpdatedNote",
    "Response Bullet List:": "ResponseBulletList",
    "<<RelatedCasesRecontact>>": "RelatedCasesRecontact",
    "<<CrossLineBusinessCase>>": "CrossLineBusinessCase",
    "<<CallReviews>>": "CallReviews",
    "<<RiskIndicators>>": "RiskIndicators",
    "<<WF_TPError>>": "WF_TPError",
    "<<ReliefType>>": "ReliefType",
    "<<Relief_Reason>>": "Relief_Reason",
    "<<Resolution>>": "Resolution_Note"
}

# Function to match label and insert value to right-side cell
def fill_table_right_cell(table, label_to_value):
    for row in table.rows:
        for i, cell in enumerate(row.cells):
            cell_text = cell.text.strip()
            for label, value in label_to_value.items():
                if cell_text.startswith(label):
                    if i + 1 < len(row.cells):
                        row.cells[i + 1].text = str(value)
                    break

# Function to replace placeholders like <<WF_TPError>> in the entire document
def replace_placeholders(doc, label_to_value):
    def replace_text(text):
        for label, val in label_to_value.items():
            if label.startswith("<<") and label.endswith(">>"):
                text = text.replace(label, str(val))
        return text

    for para in doc.paragraphs:
        for run in para.runs:
            run.text = replace_text(run.text)

    for table in doc.tables:
        for row in table.rows:
            for cell in row.cells:
                for para in cell.paragraphs:
                    for run in para.runs:
                        run.text = replace_text(run.text)

# Main document generation loop
for idx, row in df.iterrows():
    doc = Document(template_path)
    label_to_value = {
        label: str(row[col]).strip() if pd.notnull(row[col]) else ""
        for label, col in label_to_column.items()
    }

    for table in doc.tables:
        fill_table_right_cell(table, label_to_value)

    replace_placeholders(doc, label_to_value)

    case_id = str(row["CaseID"]).zfill(16)
    output_file = os.path.join(output_dir, f"Case_{case_id}.docx")
    doc.save(output_file)
    print(f"[SAVED] {output_file}")

print("All case documents created with working fill logic.")
