import os
import requests
import zipfile
from io import BytesIO

def construct_github_url(base_url, id_variable, two_digit_number):
    """
    Constructs the GitHub URL based on the provided base URL, ID variable, and two-digit number.

    Args:
        base_url (str): The standard base URL of the GitHub repository.
        id_variable (str): The ID variable starting with 'DR' followed by a number.
        two_digit_number (str): A two-digit number as a string (e.g., '01', '02').

    Returns:
        str: The constructed GitHub URL.
    """
    return f"{base_url}/{id_variable}-P{two_digit_number}"

def download_and_extract_zip(github_url, local_dir, token):
    """
    Downloads the repository as a ZIP file from GitHub and extracts all .egp files to the local directory.

    Args:
        github_url (str): The URL of the GitHub repository.
        local_dir (str): The local directory to save the .egp files.
        token (str): GitHub API token for authentication.
    """
    # Ensure the local directory exists
    os.makedirs(local_dir, exist_ok=True)

    # Construct the API URL for downloading the repository as a ZIP file
    api_url = f"{github_url}/archive/refs/heads/main.zip"

    # Set up headers for authentication
    headers = {'Authorization': f'token {token}'}

    # Download the ZIP file
    response = requests.get(api_url, headers=headers)
    if response.status_code == 200:
        with zipfile.ZipFile(BytesIO(response.content)) as z:
            for file_info in z.infolist():
                if file_info.filename.endswith('.egp'):
                    # Extract .egp files to the local directory
                    file_info.filename = os.path.basename(file_info.filename)  # Remove path info
                    z.extract(file_info, local_dir)
                    print(f"Extracted: {file_info.filename}")
    else:
        print(f"Failed to download the repository: {response.status_code}")

if __name__ == "__main__":
    # Example usage
    base_url = "https://github.com/your-organization/your-repo"
    id_variable = "DR12345"  # Example ID variable
    two_digit_number = "01"  # Example two-digit number
    local_dir = r"C:\path\to\your\local\directory"
    token = "your_personal_access_token"  # Replace with your actual GitHub API token

    github_url = construct_github_url(base_url, id_variable, two_digit_number)
    download_and_extract_zip(github_url, local_dir, token)
