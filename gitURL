import os
import requests

def download_github_file(repo_url, file_path, local_dir, token, branch='main'):
    """
    Downloads a specific file from a GitHub repository.

    Args:
        repo_url (str): URL of the GitHub repository (e.g., 'https://github.com/username/repo').
        file_path (str): Path to the target file within the repository (e.g., 'folder/subfolder/filename.ext').
        local_dir (str): Local directory to save the downloaded file.
        token (str): Personal Access Token for authentication.
        branch (str, optional): Branch name. Defaults to 'main'.

    Raises:
        Exception: If the file cannot be downloaded.
    """
    # Construct the raw file URL
    raw_url = f"{repo_url.replace('github.com', 'raw.githubusercontent.com')}/{branch}/{file_path}"

    headers = {'Authorization': f'token {token}'}

    try:
        response = requests.get(raw_url, headers=headers)
        response.raise_for_status()  # Raise an HTTPError for bad responses
    except requests.exceptions.HTTPError as http_err:
        raise Exception(f"HTTP error occurred: {http_err}")
    except Exception as err:
        raise Exception(f"An error occurred: {err}")

    # Ensure the local directory exists
    os.makedirs(local_dir, exist_ok=True)

    # Define the local file path
    local_file_path = os.path.join(local_dir, os.path.basename(file_path))

    # Write the content to the local file
    with open(local_file_path, 'wb') as local_file:
        local_file.write(response.content)

    print(f"File '{file_path}' has been downloaded successfully to '{local_file_path}'.")

if __name__ == "__main__":
    # Example usage
    repo_url = "https://github.com/"
    file_path = "////"
    local_dir = r"C:\Users\OneDrive - \Code Files"
    token = "your_personal_access_token"  # Replace with your actual PAT
    branch = "main"  # Change this if your file is in a different branch

    download_github_file(repo_url, file_path, local_dir, token, branch)
